{"version":3,"file":"main.322a94969a90ca502ab1.hot-update.js","sources":["webpack:///src/App.js"],"sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport './App.css';\n\nconst Todo = ({ list, index, complete, remove }) => {\n\treturn (\n\t\t<div className=\"todo\" \n\t\t  style={{ textDecoration: list.isCompleted ? \"line-through\" : \"\" }}>\n      { isEdit ? \n      <div>\n\t\t    {list.title}\n\t\t    <div>\n          <button onClick={() => complete(index)}>Edit</button>\n          <button onClick={() => remove(index)}>x</button>\n        </div>\n      </div> :\n      <div>\n\t\t    <input>{list.title}</input>\n\t\t    <div>\n          <button onClick={() => complete(index)}>Edit</button>\n          <button onClick={() => remove(index)}>x</button>\n        </div>\n      </div> }\n    </div>\n  );\n\n}\n\nfunction TodoForm({ fff }) {\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    fff(value);\n    setValue(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"input\"\n        value={value}\n        onChange={e => setValue(e.target.value)}\n      />\n    </form>\n  );\n}\n\nfunction App() {\n  const [todos, setTodos] = useState([{}]);\n\n  useEffect(() => {\n    axios.get(`https://jsonplaceholder.typicode.com/posts`)\n    .then(res => {\n      console.log(res.data);\n      setTodos(res.data);\n    })\n  }, []);\n\n  const addTodo = text => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n    console.log(...todos, {text});\n    console.log(...todos, {text});\n  };\n\n  const completeTodo = index => {\n     const newTodos = [...todos];\n     newTodos[index].isEdit = true;\n    //  setTodos(newTodos);\n   };\n\n   const removeTodo = index => {\n     const newTodos = [...todos];\n     newTodos.splice(index, 1);\n     setTodos(newTodos);\n   };\n\n  return (\n    <div className=\"app\">\n      <div className=\"todo-list\">\n        {todos.map((r, index) => (\n          <Todo\n            key={index}\n            index={index}\n            list={r}\n            complete={completeTodo}\n            remove={removeTodo}\n          />\n        ))}\n        <TodoForm fff={addTodo} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAFA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAFA;AAVA;AAoeA;AACA;AACA;;;;A","sourceRoot":""}